//整形数据存储按照补码 正数原码反码补码相同
//大端字节序存储 低位的放在高地址
//小端字节序存储 低位的放在低地址
///写一个程序判断是大端还小端
//比如 a=1 内存中存放补码（要转成16进制） 0x 00 00 00 01（整形4个字节）
//如果大端 则为 00 00 00 01 小端为 01 00 00 00
#include <stdio.h>
int check()
{
	int a = 1;
	char* p = (char*)&a;//字符型指针一次访问一个字节 
	return *p; //故*p为00 则为大端 01为小端
}
int main()
{
	int a=check();
	if (a == 1)
	{
		printf("小端");
	}
	else
		printf("大端");
	return 0;
}
