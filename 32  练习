//练习
#include <stdio.h>
int main()
{
	char a = -1;
	signed char b = -1;
	unsigned char c = -1;
	printf("%d %d %d", a, b, c);
	//结果为 -1 -1 255
	//以a为例 -1补码为11111111111111111111111111111111
	//字符类型占一个字节 故内存补码为 11111111
	//打印时 转成整形 最高位为1视为符号位 补齐1 则为11111111111111111111111111111111 输出-1
	//而c为unsigned类型 视为无符号数 补齐0 则为000000000000000000000000111111
	return 0;
}

#include <stdio.h>
int main()
{
	
	
	char a = -128;
	printf("%u", a);
	//a的原码为10000000000000000000000010000000
	//反码为   11111111111111111111111101111111
	//补码     11111111111111111111111110000000
	// 一个字节 10000000
	//%u 打印无符号的十进制整数
	//转换成整形 补码为 11111111111111111111111110000000
	//无符号 故补码 原码 反码相同 输出上述二进制对应的十进制
	return 0;
}
